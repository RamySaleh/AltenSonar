@model IEnumerable<AltenSonar.Core.Entities.Customer>

@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Dashboard</h2>

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
</head>

<div>
    <b style="margin-left:30px;font-size:18px">Name : </b><input type="text" id="txtCustomerNameSearch" onkeyup="filterCustomers()">
    <b style="margin-left:80px;font-size:18px">Status : </b> <select id="optVehicleStatus" onchange="filterCustomers()">
        <option value="">All</option>
        <option value="true">Connected</option>
        <option value="false">Disconnected</option>
    </select>
</div>
<table class="table" id="tblCustomers">
    @foreach (var customer in Model)
    {
        <tr class="customerRow" id="@customer.id">
            <td>
                <div><b>@Html.DisplayNameFor(model => model.Name) : </b>@Html.DisplayFor(modelItem => customer.Name)</div>
                <div><b>@Html.DisplayNameFor(model => model.Address) : </b>@Html.DisplayFor(modelItem => customer.Address)</div>
                <div>
                    <table class="table" style="margin-top:20px;margin-left:10px">
                        <tr>
                            <td style="font-weight : bold">
                                Vehicle Id
                            </td>
                            <td style="font-weight : bold">
                                Registration Number
                            </td>
                            <td style="font-weight : bold">
                                Connected
                            </td>
                        </tr>
                        @foreach (var vehicle in customer.OwnedVehicles)
                        {
                            <tr class="vehicleRow" data-customer="@customer.id">
                                <td>
                                    @Html.DisplayFor(modelItem => vehicle.id)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => vehicle.RegisterationNumber)
                                </td>
                                <td id="@vehicle.id" class="fa fa-circle-o-notch fa-spin" style="font-size:16px;margin-left:25px" data-status="@vehicle.Status"></td>
                            </tr>
                        }
                    </table>
                </div>

            </td>
        </tr>        
    }

</table>

<script type="text/javascript">

    $( document ).ready(function() {
        CheckVehiclesConnection();
        setInterval(CheckVehiclesConnection, 60000);
    });

    function CheckVehiclesConnection() {
        var model = @Html.Raw(Json.Encode(Model));
        model.forEach(checkConnection);
    }

    function checkConnection(customer, index, arr) {
        for (i = 0; i < customer.OwnedVehicles.length; i++) {

            var currentVehicle = customer.OwnedVehicles[i];

            currentVehicle.Status = isVehicleConnected(currentVehicle);

            updateStatusOnDashboard(currentVehicle.id,currentVehicle.Status);
        }
    }

    function isVehicleConnected(vehicle){
        // Generate random status to simulate the connection to the actual vehicles
        var randomNumber = Math.floor((Math.random() * 10) + 1);
        var randomStatus = (randomNumber % 2) == 0;
        return randomStatus;
    }

    function updateStatusOnDashboard(vehicleId,status){
        var vehicleStatusCellId = '#' + vehicleId;
        $(vehicleStatusCellId)[0].className = status ? 'glyphicon glyphicon-ok' : 'glyphicon glyphicon-remove';
        $(vehicleStatusCellId)[0].setAttribute("data-status",status);  
    }
    
    function filterCustomers(){
        // Declare variables
        var input, namefilter,statusFilter, tr, nameTd, statusTd, childrenRows, emptyRow;  
        input = document.getElementById("txtCustomerNameSearch");
        namefilter = input.value.toUpperCase();
        input = document.getElementById("optVehicleStatus");
        statusFilter = input.value.toUpperCase();

        // Loop through all table rows, and hide those who don't match the search query        
        tr = $('.customerRow');
        for (var i = 0; i < tr.length; i++) {
            nameTd = tr[i].getElementsByTagName("td")[0];
            childrenRows = tr[i].getElementsByTagName("tr");
            emptyRow = true;
            if (nameTd.innerHTML.toUpperCase().indexOf(namefilter) > -1) {
                for (var j = 0; j < childrenRows.length; j++) {
                    statusTd = childrenRows[j].getElementsByTagName("td")[2];
                    if (statusTd) {
                        var status = statusTd.getAttribute("data-status");
                        if (status) {
                            if (status.toUpperCase() == statusFilter || statusFilter == "") {
                                childrenRows[j].style.display = "";
                                emptyRow = false;
                            } else {
                                childrenRows[j].style.display = "none";
                            }
                        }                  
                    }
                }
                // Hide customers who have no connected cars
                if (emptyRow) {
                    tr[i].style.display = "none";
                }
                else{
                    tr[i].style.display = "";
                }
            }
            else {
                tr[i].style.display = "none";
            }
        }    
    }   
</script>
<style>
    #txtCustomerNameSearch {
        width: 100%; /* Full-width */
        font-size: 14px; /* Increase font-size */
        padding: 5px 18px 5px 38px; /* Add some padding */
        border: 1px solid #ddd; /* Add a grey border */
        margin-bottom: 12px; /* Add some space below the input */
    }

    #optVehicleStatus{
        width: 100%; /* Full-width */
        font-size: 16px; /* Increase font-size */
        padding: 5px 18px 5px 45px; /* Add some padding */
        border: 1px solid #ddd; /* Add a grey border */
        margin-bottom: 12px; /* Add some space below the input */
    }
</style>