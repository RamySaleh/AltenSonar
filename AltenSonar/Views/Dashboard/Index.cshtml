@model IEnumerable<AltenSonar.Core.Entities.Customer>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
</head>
<table class="table">
   

@foreach (var customer in Model)
{
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Address)
        </th>
        <th></th>
    </tr>

    <tr>
        <td>
            @Html.DisplayFor(modelItem => customer.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => customer.Address)
        </td>    
    </tr>
    <tr>
        <td style="font-weight : bold">
            Vehicle Id
        </td>
        <td style="font-weight : bold">
            Registration Number
        </td>
        <td style="font-weight : bold">
            Connected
        </td>
    </tr>
    foreach (var vehicle in customer.OwnedVehicles)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => vehicle.id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => vehicle.RegisterationNumber)
            </td>
            <td id="@vehicle.id" class="fa fa-circle-o-notch fa-spin" style="font-size:16px">
            </td>
        </tr>
    }
}

</table>

<script type="text/javascript">    
    $( document ).ready(function() {       
        CheckVehiclesConnection();
        setInterval(CheckVehiclesConnection, 60000);
    });

    function CheckVehiclesConnection() {        
        var model = @Html.Raw(Json.Encode(Model));
        model.forEach(checkConnection);        
    }

    function checkConnection(customer, index, arr) {        
        for (i = 0; i < customer.OwnedVehicles.length; i++) { 

            var currentVehicle = customer.OwnedVehicles[i];

            currentVehicle.Status = isVehicleConnected(currentVehicle);

            updateStatusOnDashboard(currentVehicle.id,currentVehicle.Status);
        }
    }

    function isVehicleConnected(vehicle){
        // Generate random status to simulate the connection to the actual vehicles
        var randomNumber = Math.floor((Math.random() * 10) + 1);
        var randomStatus = (randomNumber % 2) == 0;
        return randomStatus;
    }

    function updateStatusOnDashboard(vehicleId,status){
        var vehicleStatusCellId = '#' + vehicleId;
        $(vehicleStatusCellId)[0].className = status ? 'glyphicon glyphicon-ok' : 'glyphicon glyphicon-remove';
    }

</script>